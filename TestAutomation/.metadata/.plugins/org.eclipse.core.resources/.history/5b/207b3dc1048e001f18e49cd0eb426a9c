package functions;

import objects.Elements;
import utilities.ExcelUtilities;
import utilities.ReportUtilities;

import java.util.List;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class AppointmentPortalFunctions {

	WebDriver driver;
	String dataFilePath = "C:\\Eclipse-JavaProjects\\TestAutomationFramework\\TestData\\TerminTestData.xlsx";
	String sheetName = "TerminDetails";
	
	String actualAufgabe;
	String actualTag;
	String actualStartzeit;
	String actualEndzeit;
	String actualTechnikername;
	String actualTechnikeralter;
	String actualTechnikergeschlecht;
	
	public AppointmentPortalFunctions(WebDriver driver) {
		this.driver = driver;
	}
	
	public void VerifyAppointmentData() throws Exception {
	
		FindActualData();		
		ExcelUtilities excelUtilities = new ExcelUtilities(dataFilePath, sheetName);
		String expectedAufgabe = excelUtilities.getCellData(1, 1); 
		String expectedTag = excelUtilities.getCellData(1, 2); 
		String expectedStartzeit = excelUtilities.getCellData(1, 3); 
		String expectedEndzeit = excelUtilities.getCellData(1, 4); 
		String expectedTechnikername = excelUtilities.getCellData(1, 5); 
		String expectedTechnikeralter = excelUtilities.getCellData(1, 6); 
		String expectedTechnikergeschlecht= excelUtilities.getCellData(1, 7); 
		excelUtilities.closeWorkbook();
	
	}
	
	public void VerifyRescheduledAppointmentData() throws Exception {
		ReportUtilities reports = new ReportUtilities(driver);
		ExcelUtilities excelUtilities = new ExcelUtilities(dataFilePath, sheetName);
		
		driver.findElement(Elements.reschduleButton).click();
		List<WebElement> rescheduleOPtions = driver.findElements(Elements.rescheduleOptions);
		int rescheduleOPtionsSize = rescheduleOPtions.size();
		if(rescheduleOPtions.size() > 3 || rescheduleOPtions.size() < 3) {
			throw new Exception("Number of options for rescheduling appointment are incorrect.");
		}
		
		driver.findElement(Elements.newAppointment).click();
		String buttonText = driver.findElement(Elements.newAppointment).getText();
        
        String[] buttonTextArray = buttonText.split(" ");
        String expectedAufgabe = excelUtilities.getCellData(1, 1); 
		String expectedTag = buttonTextArray[0]; 
		String expectedStartzeit = buttonTextArray[1]; 
		String expectedEndzeit = buttonTextArray[3].split("\n")[0]; 
		String expectedTechnikername = buttonTextArray[4] + " " + buttonTextArray[5]; 
		String expectedTechnikeralter = buttonTextArray[6].replace("(", ""); 
		String expectedTechnikergeschlecht= buttonTextArray[9].replace(")", "");
       
		System.out.println(buttonTextArray);
		driver.findElement(Elements.initialAppointment).click();
	}
	
	private void FindActualData() {
		String actualAufgabe = driver.findElement(Elements.aufgabe).getText().split(":")[1].replaceFirst("^\\s*", "");
		String actualTag = driver.findElement(Elements.tag).getText();
		String actualStartzeit = driver.findElement(Elements.startZeit).getText().substring(10, 15);
		String actualEndzeit = driver.findElement(Elements.endZeit).getText().substring(18, 23);
		String actualTechnikername = driver.findElement(Elements.technikerName).getText().split(":")[1].replaceFirst("^\\s*", "");
		String actualTechnikeralter = driver.findElement(Elements.technikerAlter).getText().split(":")[1].replaceFirst("^\\s*", "");
		String actualTechnikergeschlecht = driver.findElement(Elements.technikerGeschlecht).getText().split(":")[1].replaceFirst("^\\s*", "");
	}
	
	private void AssertData() {
		if(actualAufgabe.equals(expectedAufgabe) && actualTag.equals(expectedTag) && actualStartzeit.equals(expectedStartzeit)
				&& actualEndzeit.equals(expectedEndzeit) && actualTechnikername.equals(expectedTechnikername) 
				&& actualTechnikeralter.equals(expectedTechnikeralter)
				&& actualTechnikergeschlecht.equals(expectedTechnikergeschlecht)) {
			reports.AddScreenshotForPassOrFailStatus("PASS", "All the data is as expected and visible on customer portal dashboard");
		}
		else {
			reports.AddScreenshotForPassOrFailStatus("FAIL", "Data not correct. Expected is: "+expectedAufgabe+" Actual is: "+actualAufgabe);
			throw new Exception("Appointment Data not Visible");
		}
	}
}
