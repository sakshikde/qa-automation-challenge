package test_scenarios;

import java.io.File;
import java.io.IOException;

import java.time.Duration;

import org.apache.commons.io.FileUtils;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

import functions.AppointmentPortalFunctions;
import io.github.bonigarcia.wdm.WebDriverManager;
import utilities.ReportUtilities;

public class TestMethods {

	WebDriver driver;
	
	AppointmentPortalFunctions appointment = new AppointmentPortalFunctions(driver);
	ReportUtilities reports = new ReportUtilities();
	
	@BeforeTest
	public void beforeTest() throws InterruptedException {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();				
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(2));
	}
	
	@Test
	public void VerifyAppointmentDataOnCustomerDashboard() throws IOException{
		try {
			reports.StartTest("Verify Appointment Data");			
			appointment.VerifyAppointmentData();
		}
		catch(Exception message) {
			ReportUtilities.extentTest.log(Status.FAIL, message.getMessage());
		}		
	}
	
	@Test
	public void VerifyRescheduledAppointmentDataOnCustomerDashboard() throws IOException{
		try {
			reports.StartTest("Verify Rescheduled Appointment Data");		
			appointment.VerifyRescheduledAppointmentData();
		}
		catch(Exception message) {
			AddScreenshotForPassOrFailStatus("Fail", "Complete data of rescheduled appointment is not available on the screen");
		}		
	}
		
	@AfterTest
	public void afterTest() {
		driver.quit();
		extent.flush();
	}	
}
